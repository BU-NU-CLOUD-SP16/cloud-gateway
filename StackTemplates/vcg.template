{
  "Description" : "Example CloudFormation Stack",

  "Parameters" : {
    "KeyPair": {
      "Description" : "Name of an existing EC2 KeyPair",
      "Default" : "%s",
      "Type": "String"
    },

    "Vpc" : {
      "Description" : "The ID of Vpc to deploy this vcg",
      "Default" : "%s",
      "Type": "String"
    },

    "PublicSubnet" : {
      "Description" : "The ID of PublicSubnet to deploy this vcg",
      "Default" : "%s",
      "Type": "String"
    },

    "PrivateSubnetCidr" : {
      "Type" : "String",
      "Default" : "%s"
    },

    "PrivateIP" : {
      "Type" : "String",
      "Default" : "%s"
    },

    "PublicIP" : {
      "Type" : "String",
      "Default" : "%s"
    },

    "EipId" : {
      "Type" : "String",
      "Default" : "%s"
    },

    "HqIp" : {
      "Type" : "String",
      "Default" : "%s",
      "Description" : "public IP of head quarter"
    },

    "Psk" : {
      "Type" : "String",
      "Default" : "%s",
      "Description" : "PSK between this cloud and head quarter"   
    },

    "InstanceType" : {
      "Type" : "String",
      "Default" : "%s",
      "Description" : "EC2 instance type, e.g. m1.small, m1.large, etc."
    },

    "ImageId" : {
      "Type" : "String",
      "Default" : "%s",
      "Description" : "we use Ubuntu Server 14.04 LTS (HVM), SSD Volume Type "
    },

    "SecurityGroup" : {
      "Type" : "String",
      "Default" : "%s",
      "Description" : "Security group for this vcg"
    }
  },


  "Resources" : {

    "Vcg": {
      "Type": "AWS::EC2::Instance",

      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "files" : {
              "/etc/ipsec.conf" : {
                "content" : { "Fn::Join" : [ "", ["config setup", "\n",
                                                  "conn %%default", "\n",
                                                  " ikelifetime=60m", "\n",
                                                  " keylife=20m", "\n",
                                                  " rekeymargin=3m", "\n",
                                                  " keyingtries=1", "\n",
                                                  " authby=secret", "\n",
                                                  " keyexchange=ikev2", "\n",
                                                  " mobike=no", "\n",

                                                  "conn pass", "\n",
                                                  " rightsubnet=",
                                                    { "Ref" : "PrivateSubnetCidr" }, 
                                                    ",", { "Ref" : "HqIp" }, "/32", "\n",
                                                  " type=passthrough", "\n",
                                                  " authby=never", "\n",
                                                  " auto=route", "\n",

                                                  "conn to-headquarter", "\n",
                                                  " auto=start", "\n",
                                                  " rightid=", { "Ref" : "HqIp" }, "\n",
                                                  " right=", { "Ref" : "HqIp" }, "\n",
                                                  " rightsubnet=0.0.0.0/0", "\n",
                                                  " leftid=",
                                                    { "Ref" : "PublicIP"}, "\n",
                                                  " left=",
                                                    { "Ref" : "PrivateIP" }, "\n",
                                                  " leftsubnet=",
                                                    { "Ref" : "PrivateSubnetCidr" }, "\n"]]},                
                "mode"  : "000777",
                "owner" : "root",
                "group" : "root"
              },

              "/etc/ipsec.secrets" : {
                "content" : { "Fn::Join" : [ "", [{"Ref" : "PublicIP"}, " ",
                                                  {"Ref" : "HqIp"}, " :", " PSK ",
                                                  "\"", {"Ref" : "Psk"}, "\"\n"]]},
                "mode"  : "000777",
                "owner" : "root",
                "group" : "root"
              }
            },

            "commands" : {
                "1": { "command" : { "Fn::Join" : [ " ", ["sudo for path in /proc/sys/net/ipv4/conf/*;",
                                                          "do echo 0 > $path/accept_redirects;",
                                                          "echo 0 > $path/send_redirects;",
                                                          "done"]]}},
                "2": { "command" : "sudo echo net.ipv4.ip_forward = 1 >> /etc/sysctl.conf"},
                "3": { "command" : "sudo echo net.ipv4.conf.all.accept_redirects = 0 >> /etc/sysctl.conf"},
                "4": { "command" : "sudo echo net.ipv4.conf.all.send_redirects = 0 >> /etc/sysctl.conf"},
                "5": { "command" : "sudo echo 1 > /proc/sys/net/ipv4/ip_forward"},
                "5": { "command" : "sudo sysctl -p"},
                "start ipsec tunnel": {"command" : "sudo ipsec restart"}
            }
          }
        }
      },

      "Properties": {
        "ImageId" : { "Ref" : "ImageId" },
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref": "KeyPair" },

        "SourceDestCheck" : "false",

        "NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "SecurityGroup" }],
          "PrivateIpAddress"         : {"Ref" : "PrivateIP"},
          "AssociatePublicIpAddress" : "false",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "PublicSubnet" }
        }],
        
        "UserData": {
         "Fn::Base64": { "Fn::Join":["", [
            "#!/bin/bash -ex\n",

            "# get newest code\n",
            "cd /home/ubuntu/cloud-gateway\n",
            "git pull \n",

            "# Install the files and packages from the metadata\n",
            "/usr/local/bin/cfn-init ",
            "         --stack ", { "Ref" : "AWS::StackName" },
            "         --resource Vcg ",
            "         --region ", { "Ref" : "AWS::Region" }, "\n",

            "# Start the web service", "\n",
	          "sudo python /home/ubuntu/cloud-gateway/app/slave.py", "\n",

            "# Signal the status from cfn-init\n",
            "/usr/local/bin/cfn-signal -e $? ",
            "         --stack ", { "Ref" : "AWS::StackName" },
            "         --resource Vcg ",
            "         --region ", { "Ref" : "AWS::Region" }, "\n",
            "sudo ipsec restart\n"
         ]]}}
      }
    }
  },

  "Outputs" : {
    "SecurityGroupId" : {
      "Value" : { "Ref" : "SecurityGroup" }
    },
    "VcgId" : {
      "Value" : { "Ref" : "Vcg" }
    }
  }
}


